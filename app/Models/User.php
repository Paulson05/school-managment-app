<?php

namespace App\Models;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class User extends Authenticatable
{
    use  HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var string[]
     */
    protected $guarded = [];
    public function getName()
    {
        if ($this->first_name && $this->last_name) {
            return "{$this->first_name} {$this->last_name}";
        }

        if ($this->first_name) {
            return $this->first_name;
        }
    }
    public function courseList(){

        if ($this->departments_id && $this->semester_id && $this->levels_id) {
            return "{$this->departments_id} {$this->semester_id} {$this->levels_id}";
        }

        if ($this->departments_id) {
            return $this->departments_id;
        }
    }
            public function shortCode(){
        return  $this->belongsTo(Department::class, 'departments_id' );
    }
  public function faculty(){
        return $this->belongsTo(Faculty::class, 'faculty_id');
  }


    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function($model){
            $model->number = User::where('department_id', $model->department_id)->max('number') + 1;
            $model->full_number = $model->shortCode->short_code .'/'. date('y', strtotime('-1 year'))  . '/'. date('y').  '/'. str_pad($model->number, 5, '0', STR_PAD_LEFT);
        });
    }

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];
}
